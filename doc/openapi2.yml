openapi: 3.0.3
info:
  title: fraculation-leaderboard
  description: ''
  license:
    name: ''
  version: 0.1.0
paths:
  /leaderboard/games:
    get:
      tags:
      - leaderboard::routes
      summary: Get Games list
      description: |-
        Get Games list

        Responds with a list of games
      operationId: get_games
      responses:
        '200':
          description: Games list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
    post:
      tags:
      - leaderboard::routes
      summary: Create Game
      description: |-
        Create Game

        Responds with the created game
      operationId: create_game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameNew'
        required: true
      responses:
        '200':
          description: New Game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  /leaderboard/games/{game_id}:
    get:
      tags:
      - leaderboard::routes
      summary: Get Game
      description: |-
        Get Game

        Responds with full details about the game
      operationId: get_game
      parameters:
      - name: game_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '404':
          description: Game not found
          content:
            text/plain:
              schema:
                type: string
              example: Not Found
  /leaderboard/games/{game_id}/entries:
    get:
      tags:
      - leaderboard::routes
      summary: Get Game Entries
      description: |-
        Get Game Entries

        Responds with a list of game entries, sorted by score based on the score_sort_mode of the game
      operationId: get_game_entries
      parameters:
      - name: game_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Game Entries list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaderboardEntry'
        '404':
          description: Game not found
          content:
            text/plain:
              schema:
                type: string
              example: Not Found
    post:
      tags:
      - leaderboard::routes
      summary: Create User Game Entry
      description: |-
        Create User Game Entry

        Responds with the created entry, or an existing entry, if new entry is not an improvement.
      operationId: create_game_entry
      parameters:
      - name: game_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaderboardEntryNew'
        required: true
      responses:
        '200':
          description: New game entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardEntry'
        '409':
          description: Old, better, game entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardEntry'
  /leaderboard/users/{user_id}/games/{game_id}/entries:
    get:
      tags:
      - leaderboard::routes
      summary: Get User Game Entry
      description: |-
        Get User Game Entry

        Responds with a single game entry
      operationId: get_user_game_entry
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: game_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Game Entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardEntry'
        '404':
          description: Game or Entry not found
          content:
            text/plain:
              schema:
                type: string
              example: Not Found
components:
  schemas:
    Game:
      type: object
      required:
      - id
      - description
      - score_sort_mode
      properties:
        description:
          type: string
        id:
          type: integer
          format: int32
        score_sort_mode:
          $ref: '#/components/schemas/GameScoreSortMode'
    GameNew:
      type: object
      required:
      - description
      properties:
        description:
          type: string
        score_sort_mode:
          allOf:
          - $ref: '#/components/schemas/GameScoreSortMode'
          nullable: true
    GameScoreSortMode:
      type: string
      enum:
      - HigherIsBetter
      - LesserIsBetter
    LeaderboardEntry:
      type: object
      required:
      - id
      - score
      - game_id
      - user_name
      - user_id
      - free_data
      properties:
        free_data:
          type: string
        game_id:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        score:
          type: number
          format: double
        user_id:
          type: string
          format: uuid
        user_name:
          type: string
    LeaderboardEntryNew:
      type: object
      required:
      - score
      - user_name
      properties:
        free_data:
          type: string
          nullable: true
        score:
          type: number
          format: double
        user_id:
          type: string
          format: uuid
          description: When not provided, will be assigned a random unique id
          nullable: true
        user_name:
          type: string
    LeaderboardUpdate:
      type: object
      required:
      - mutation_kind
      - id
      properties:
        id:
          type: integer
          format: int32
        mutation_kind:
          $ref: '#/components/schemas/MutationKind'
tags:
- name: leaderboard
  description: Game Leaderboard management API
